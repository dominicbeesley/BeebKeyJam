# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Initialise pico_sdk from installed location
# (note this can come from environment, CMake cache etc)

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico_sdk_import.cmake)

project(beebkbd_rfb C CXX ASM)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

# Add executable. Default name is the project name, version 0.1

add_executable(beebkbd_rfb beebkbd_rfb.c)

## pico_generate_pio_header(beebkbd_rfb ${CMAKE_CURRENT_LIST_DIR}/uart_rx.pio)

pico_set_program_name(beebkbd_rfb "beebkbd_rfb")
pico_set_program_version(beebkbd_rfb "0.1")

#pico_enable_stdio_uart(beebkbd_rfb 1)
pico_enable_stdio_usb(beebkbd_rfb 1)

# Add the standard library to the build
target_link_libraries(beebkbd_rfb pico_stdlib hardware_pio hardware_dma)

# Add any user requested libraries
target_link_libraries(beebkbd_rfb
        hardware_pio
        hardware_timer
        pico_multicore 
        )

pico_add_extra_outputs(beebkbd_rfb)